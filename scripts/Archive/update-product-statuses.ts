import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function updateProductStatuses() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤...')

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    const products = await prisma.product.findMany()
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`)

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    const updates = [
      // –•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂
      { name: '–ú—è—Å–Ω–∞—è –ø–∏–¥–µ', status: 'HIT' },
      { name: '–ü–∏–¥–µ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π', status: 'HIT' },
      { name: '–ö–æ–º–±–æ "–Ø –æ–¥–∏–Ω"', status: 'HIT' },
      
      // –ù–æ–≤–∏–Ω–∫–∏
      { name: '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ', status: 'NEW' },
      { name: '–ü–∏–¥–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π', status: 'NEW' },
      { name: '–ö–æ–º–±–æ "–ú—ã –≤–¥–≤–æ–µ–º"', status: 'NEW' },
      
      // –ö–ª–∞—Å—Å–∏–∫–∞
      { name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—ã—Ä–Ω–∞—è –ø–∏–¥–µ', status: 'CLASSIC' },
      { name: '–°—ã—Ä–Ω–∞—è –ø–∏–¥–µ', status: 'CLASSIC' },
      { name: '–û–≤–æ—â–Ω–æ–µ –ø–∏–¥–µ', status: 'CLASSIC' },
    ]

    let updatedCount = 0

    for (const update of updates) {
      const product = products.find(p => p.name.includes(update.name) || update.name.includes(p.name))
      
      if (product) {
        await prisma.product.update({
          where: { id: product.id },
          data: { status: update.status }
        })
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: ${product.name} -> ${update.status}`)
        updatedCount++
      } else {
        console.log(`‚ö†Ô∏è –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: ${update.name}`)
      }
    }

    console.log(`üéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} —Ç–æ–≤–∞—Ä–æ–≤`)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await prisma.product.groupBy({
      by: ['status'],
      _count: {
        status: true
      }
    })

    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:')
    stats.forEach(stat => {
      console.log(`  ${stat.status}: ${stat._count.status} —Ç–æ–≤–∞—Ä–æ–≤`)
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

updateProductStatuses()
