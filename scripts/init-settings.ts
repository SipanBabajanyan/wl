import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function initSettings() {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞...')

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const defaultSettings = [
      { key: 'logo', value: '/logo.png' },
      { key: 'siteName', value: 'Pideh Armenia' },
      { key: 'siteDescription', value: '–ú–∏–Ω–∏-–ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ –∞–¥–∂–∞—Ä—Å–∫–∏—Ö —Ö–∞—á–∞–ø—É—Ä–∏. –°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞!' },
      { key: 'contactPhone', value: '+374 XX XXX XXX' },
      { key: 'contactEmail', value: 'info@pideh.am' },
      { key: 'address', value: '–ï—Ä–µ–≤–∞–Ω, –ê—Ä–º–µ–Ω–∏—è' }
    ]

    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    for (const setting of defaultSettings) {
      await prisma.settings.upsert({
        where: { key: setting.key },
        update: { value: setting.value },
        create: { key: setting.key, value: setting.value }
      })
      console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ "${setting.key}" –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞`)
    }

    console.log('üéâ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error)
  } finally {
    await prisma.$disconnect()
  }
}

initSettings()

